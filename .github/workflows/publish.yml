name: publish

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    name: build ${{ matrix.target }} ðŸ“¦
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: xmf-x86_64-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: xmf-x86_64-macos
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: xmf-x86_64-windows.exe

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: ${{ matrix.target }}
        
    - name: Cache toolchain and deps
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-publish-${{ matrix.artifact_name }}-${{ hashFiles('Cargo.lock') }}
        
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
      
    - name: Package artifacts (Linux/macOS)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        mkdir -p dist
        cp target/${{ matrix.target }}/release/xmf dist/${{ matrix.artifact_name }}
        tar -czvf dist/${{ matrix.artifact_name }}.tar.gz -C dist ${{ matrix.artifact_name }} --owner=0 --group=0
        
    - name: Package artifacts (Windows)
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        mkdir dist
        Copy-Item "target\\${{ matrix.target }}\\release\\xmf.exe" -Destination "dist\\${{ matrix.artifact_name }}"
        Compress-Archive -Path "dist\\${{ matrix.artifact_name }}" -DestinationPath "dist\\${{ matrix.artifact_name }}.zip"
        
    - name: Store artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: |
          dist/${{ matrix.artifact_name }}.*
          
  release-please:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: release-please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: rust
          package-name: xmf
          
  publish-to-crates-io:
    name: publish to crates.io
    if: startsWith(github.ref, 'refs/tags/')
    needs: [release-please, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: cargo publish
        
  github-release:
    name: upload release assets
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Upload to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          assets=()
          for asset in artifacts/*/*; do
            assets+=("-a" "$asset")
          done
          if [ ${#assets[@]} -gt 0 ]; then
            gh release upload "${{ github.ref_name }}" "${assets[@]}" --repo "${{ github.repository }}"
          fi